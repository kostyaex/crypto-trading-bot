// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package ui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	//"strconv"
	//"path"
	"fmt"
)

func ResourceListPage(resource Resource) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = headerComponent(resource.Title).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<body><div class=\"container\"><h1>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 15, Col: 22}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</h1><div x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(string(fmt.Sprintf("app('%s')", resource.Name)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 17, Col: 64}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"><table><thead><tr>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, fieldName := range resource.FieldsOrder {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<th>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Fields[fieldName].Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 23, Col: 45}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</th>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<th></th></tr></thead> <tbody><template x-for=\"item in items\" :key=\"item.id\"><tr>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, fieldName := range resource.FieldsOrder {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<td x-text=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(string(fmt.Sprintf("item.%s", fieldName)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 32, Col: 61}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\"></td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<td><button class=\"button\" @click=\"openEditModal(item.id)\">Edit</button></td></tr></template></tbody></table><div x-show=\"isModalOpen\" class=\"modal\" style=\"display: none;\"><div class=\"modal-content\"><span class=\"close\" x-on:click=\"closeModal()\">&times;</span><h2>Редактирование ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 50, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</h2><template x-if=\"editableItem\"><form @submit.prevent=\"saveChanges\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, fieldName := range resource.FieldsOrder {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<label for=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(string(fieldName))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 55, Col: 38}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Fields[fieldName].Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 55, Col: 73}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, ":</label> <input type=\"text\" id=\"name\" name=\"name\" x-model=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(string(fmt.Sprintf("editableItem.%s", fieldName)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/ui/resource_list.templ`, Line: 56, Col: 109}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\"> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<button type=\"submit\" class=\"button\">Сохранить</button></form></template></div></div></div></div><script>\n\t\tfunction app(resourceName) {\n\t\t\treturn {\n\t\t\t\t// Состояние приложения\n\t\t\t\titems: [], // Список элементов\n\t\t\t\tisModalOpen: false, // Флаг открытия модального окна\n\t\t\t\teditableItem: null, // Текущий редактируемый элемент\n\n\t\t\t\t// Инициализация: загрузка данных\n\t\t\t\tinit() {\n\t\t\t\tthis.fetchItems();\n\t\t\t\t},\n\n\t\t\t\t// Загрузка списка элементов\n\t\t\t\tasync fetchItems() {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/resources/${resourceName}`);\n\t\t\t\t\tthis.items = await response.json();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Ошибка при загрузке элементов:', error);\n\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Открытие модального окна для редактирования\n\t\t\t\tasync openEditModal(id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/resources/${resourceName}?id=eq.${id}`);\n\t\t\t\t\tconst items = await response.json();\n\t\t\t\t\tconst item = items[0];\n\t\t\t\t\t//console.log(item);\n\t\t\t\t\tthis.editableItem = item;\n\t\t\t\t\tthis.isModalOpen = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Ошибка при загрузке данных для редактирования:', error);\n\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Закрытие модального окна\n\t\t\t\tcloseModal() {\n\t\t\t\tthis.isModalOpen = false;\n\t\t\t\tthis.editableItem = null; // Очищаем данные\n\t\t\t\t},\n\n\t\t\t\t// Сохранение изменений\n\t\t\t\tasync saveChanges() {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/resources/${resourceName}?id=eq.${this.editableItem.id}`, {\n\t\t\t\t\tmethod: 'PATCH', // PUT или PATCH, в зависимости от вашего API\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify(this.editableItem),\n\t\t\t\t\t});\n\n\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t// Обновляем элемент в списке\n\t\t\t\t\t\tconst index = this.items.findIndex((item) => item.id === this.editableItem.id);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\tthis.items[index] = { ...this.editableItem };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.closeModal(); // Закрываем модальное окно\n\t\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Ошибка при сохранении изменений');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Ошибка при отправке данных:', error);\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\t}\n\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
